name: Release Docker images pipeline

on:
  push:
    #branches: [ main ]
    tags:
      - '*'
      - '**'

jobs:
  ci-base:
    name: OPS - create BASE docker image
    env:
      docker_image_name: 'lukecottage/base-ops'
      docker_image_version: latest
      docker_file_iac: Dockerfile-base
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Build docker CI/CD image
        run: docker build ./ --file ./$docker_file_iac --tag "${docker_image_name}:${docker_image_version}"
      - name: Login to registry (docker hub)
        run: docker login --username ${{ secrets.DOCKER_REGISTRY_USER }} --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Push to registry (docker hub)
        run: docker push "${docker_image_name}:${docker_image_version}"

  ci-full:
    name: OPS - create FULL docker image
    env:
      docker_image_name: 'lukecottage/full-ops'
      docker_image_version: latest
      docker_file_iac: Dockerfile-full
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Build docker CI/CD image
        run: docker build ./ --file ./$docker_file_iac --tag "${docker_image_name}:${docker_image_version}"
      - name: Login to registry (docker hub)
        run: docker login --username ${{ secrets.DOCKER_REGISTRY_USER }} --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Push to registry (docker hub)
        run: docker push "${docker_image_name}:${docker_image_version}"

  ci-php:
    name: OPS - create PHP docker image
    env:
      docker_image_name: 'lukecottage/php-ops'
      docker_image_version: latest
      docker_file_iac: Dockerfile-php
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Build docker CI/CD image
        run: docker build ./ --file ./$docker_file_iac --tag "${docker_image_name}:${docker_image_version}"
      - name: Login to registry (docker hub)
        run: docker login --username ${{ secrets.DOCKER_REGISTRY_USER }} --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Push to registry (docker hub)
        run: docker push "${docker_image_name}:${docker_image_version}"

  ci-java:
    name: OPS - create JAVA docker image
    env:
      docker_image_name: 'lukecottage/java-ops'
      docker_image_version: latest
      docker_file_iac: Dockerfile-java
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Build docker CI/CD image
        run: docker build ./ --file ./$docker_file_iac --tag "${docker_image_name}:${docker_image_version}"
      - name: Login to registry (docker hub)
        run: docker login --username ${{ secrets.DOCKER_REGISTRY_USER }} --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Push to registry (docker hub)
        run: docker push "${docker_image_name}:${docker_image_version}"
